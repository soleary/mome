#!/usr/bin/env perl

use Modern::Perl '2017';
use autodie;

use DBI;

# Set to either undef or truthy as to not pollute db with ''s
my $TESTING;
my $DBFILE = 'sjsmusic.db';

my $dbh = DBI->connect("dbi:SQLite:dbname=$DBFILE",'','', { RaiseError => 1 });

my $payments = $dbh->prepare(q{
    select l.momefid, f.name, l.type, l.checknum, l.amount, l.id
        from ledger as l, family as f
        where validated is null
            and type != 'debit'
            and l.momefid = f.id
            order by l.id;
});

my $extra = $dbh->prepare(q{
    select 0 as momefid, ad.notes, ad.type, ad.checknum, ad.amount, ad.id
        from additional_deposits as ad
        where validated is null
        order by ad.id;
});

my $validate = $dbh->prepare('update ledger set validated = 1 where id = ?');
my $ex_validate = $dbh->prepare('update additional_deposits set validated = 1 where id = ?');

my $add_notification = $dbh->prepare(q{insert into notification (momefid, type, date, testing) values (?,?,date('now', 'localtime'),?); });
my $void_notification = $dbh->prepare(q{update notification set superseded = 1 where momefid = ? and sentdate is null;});
my $paid_up = $dbh->prepare(q{select momefid from paid_up where momefid = ?});

foreach my $sth ($payments, $extra) {
    $sth->execute();
    while ( my $payment = $sth->fetch() ) {

        foreach my $e ($payment->@*) {
            $e = '' unless defined $e;
        }

        printf "%3d %15s %s %s - \$%.2f [Y/N]: ", $payment->@[0..4];

        chomp( my $key = <STDIN> );
        if ($key =~ /y/i) {
            if ($payment->[0] == 0) {
                $ex_validate->execute($payment->[-1]);
            } else {
                $validate->execute($payment->[-1]);
            }
        }

        if ($key =~ /q/i) {
            last;
        }

        if ($key =~ /n/i) {
            next;
        }

        if ($payment->[0] == 0 or $payment->[2] eq 'credit') {
            next;
        } else {
            make_notification($payment);
        }
    }
    $sth->finish();
}

sub make_notification {
    my $momefid = $_[0]->[0];

    $void_notification->execute($momefid);

    $paid_up->execute($momefid);

    my $type;
    if ($paid_up->fetch()) {
        $type = 'paid-up';
    } else {
        $type = 'payment';
    }

    $add_notification->execute($momefid, $type, $TESTING);
}
