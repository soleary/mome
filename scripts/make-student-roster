#!/usr/bin/env perl

use Modern::Perl '2018';
use DBI;
use Excel::Writer::XLSX;
use POSIX 'strftime';

my $SOURCE = 'responses.csv';
my $OUTFILE = '2019-2020 Student Roster.xlsx';
my $DBFILE = 'sjsmusic.db';
my $dbh = DBI->connect("dbi:SQLite:dbname=$DBFILE",'','', { RaiseError => 1 });

my $wb = Excel::Writer::XLSX->new($OUTFILE);
my $norm = $wb->add_format( font => 'Arial', size => 10 );
my $bold = $wb->add_format( font => 'Arial', size => 10, bold => 1 );
my $url = $wb->get_default_url_format();
my $ws = $wb->add_worksheet();

my $x = 0; my $y = 0;

$ws->write($x, $y, '2019-2020 Student Roster', $bold);
$y = 3;
$ws->write($x, $y, strftime('Updated at %I:%M%P on %A, %B %e, %Y', localtime()), $norm);
$x = 2; $y = 0;
$ws->write($x, $y, [ 'First Name', 'Last Name', 'Grade', 'Homeroom', 'Parents', 'Contact' ], $bold);

my $student_sth = $dbh->prepare(qq{
    select distinct(personid), momefid, firstname, lastname, grade, homeroom
    from student_roster order by lastname, grade, firstname;
});

$student_sth->execute();

while (my $student = $student_sth->fetch()) {
    my @student = $student->@*;
    shift @student;     # Don't need the student's ID anymore
    my $momefid = shift @student;

    $student[@student] = join ', ', parent_names($momefid);
    $student[@student] = make_mailto(parent_emails($momefid));

    $x++;
    $y = $#student;
    $ws->write($x, $y, pop @student, $url);
    $ws->write($x, 0,  \@student,    $norm);
}

sub ce {
    return '' unless defined $_[0];
    return $_[0];
}

sub parent_names {
    my $momefid = $_[0];

    my $name_sth = $dbh->prepare_cached(
        qq{select p.firstname, p.lastname
            from person as p, family_member as fm
            where
                p.type = 'parent'
            and fm.personid = p.id
            and fm.momefid = ?;}
    );

    $name_sth->execute($momefid);

    my @names = ();
    while (my $rec = $name_sth->fetch()) {
        push @names, $rec->[0] . ' ' . $rec->[1];
    }
    $name_sth->finish();

    return @names;
}

sub parent_emails {
    my $momefid = $_[0];

    my $email_sth = $dbh->prepare_cached(
        qq{select p.firstname, p.lastname, p.email
            from person as p, family_member as fm
            where
                p.email is not null
            and p.type = 'parent'
            and fm.personid = p.id
            and fm.momefid = ?;}
    );

    $email_sth->execute($momefid);

    my %seen = ();
    my @emails = ();

    while (my $rec = $email_sth->fetch()) {
        if ($seen{$rec->[2]}++) {
            next;
        }

        push @emails, $rec->[0] . ' ' . $rec->[1] . ' <' . $rec->[2] . '>';
    }
    $email_sth->finish();

    return @emails;
}

sub make_mailto {
    my @emails = @_;

    my $link = '=HYPERLINK("mailto:' . join ', ', @emails;
    return $link . '", "Email Parents")';
}
